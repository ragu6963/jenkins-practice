name: Build Dockerfile

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/workflow-aarch64.yml"
jobs:
  docker-build-push:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Host Key to Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env
          scp .env ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/work-directory

      - name: Build Docker Compose services for aarch64
        env:
          DOCKER_DEFAULT_PLATFORM: linux/arm64
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker compose build

      - name: Checkout GitHub Repository to Remote Server
        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "git clone -b main https://github.com/ragu6963/jenkins-practice ~/work-directory || (cd ~/work-directory && git pull origin main)"

      - name: Docker Image Pull
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "cd ~/work-directory && docker-compose pull && docker-compose up -d"
